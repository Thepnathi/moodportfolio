{"ast":null,"code":"var _jsxFileName = \"/Users/thepnathi/development/moodportfolio/src/components/Registration.js\";\nimport React from 'react';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nvar passwordRegex = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!.%*?&])[A-Za-z\\d@$!%*?&]');\n\nvar App = function App(_ref) {\n  var values = _ref.values,\n      errors = _ref.errors,\n      touched = _ref.touched;\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"name\",\n    placeholder: \"Your Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), touched.name && errors.name && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, errors.name)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Your Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" \", errors.email)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" \", errors.password), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Your Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nvar Registration = withFormik({\n  // Same as handleChange\n  mapPropsToValues: function mapPropsToValues(_ref2) {\n    var name = _ref2.name,\n        email = _ref2.email,\n        password = _ref2.password;\n    return {\n      email: email || '',\n      password: password || '',\n      name: name || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    // TODO: asynchronously check if email exists\n    name: Yup.string().min(3, 'Name must be 3 characters or longer').max(60, 'Name must be shorter than 60 characters'),\n    email: Yup.string().email('Email not valid').max(100).required('Email is required'),\n    password: Yup.string().min(8, 'Password must be 8 characters or longer').max(100, 'Password must be shorter than 200 characters').matches(passwordRegex, 'Password must have a number, capital letter and a special character.').required('Password is required')\n  }),\n  handleSubmit: function handleSubmit(values) {// TODO //\n    // send request to server using fetch()\n    // -> need to figure out CORS (Cross Origin Resource Sharing)\n    // let headers = new Headers();\n    // // headers.append('Content-Type', 'application/json');\n    // // headers.append('Accept', 'application/json');\n    // // headers.append('Access-Control-Allow-Origin', 'http://localhost:3000');\n    // // headers.append('Access-Control-Allow-Credentials', 'true');\n    // // headers.append('POST', 'OPTIONS');\n    // (async () => {\n    //     const rawResponse = await fetch('http://localhost:5000/api/user/register', {\n    //       method: 'POST',\n    //     //   mode: 'cors',\n    //     //   headers: headers,\n    //       contentType: \"application/json\",\n    //       body: JSON.stringify({\"name\": values.name, \"email\": values.email, \"password\": values.password})\n    //     });\n    //     const content = await rawResponse.json();\n    //     console.log(content);\n    //   })();\n  }\n})(App);\nexport default Registration;","map":{"version":3,"sources":["/Users/thepnathi/development/moodportfolio/src/components/Registration.js"],"names":["React","withFormik","Form","Field","Yup","passwordRegex","RegExp","App","values","errors","touched","name","email","password","Registration","mapPropsToValues","validationSchema","object","shape","string","min","max","required","matches","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {withFormik, Form, Field} from 'formik'\nimport * as Yup from 'yup'\n\nconst passwordRegex = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!.%*?&])[A-Za-z\\d@$!%*?&]');\n\n\nconst App = ({\n  values,\n  errors,\n  touched\n}) => (\n  <Form>\n\n    <div>\n      <Field \n        name=\"name\"\n        placeholder=\"Your Name\"/>\n        {touched.name && errors.name && <p>{errors.name}</p>}\n    </div>\n\n    {/* touched.* makes sure that errors are checked only once the fiels is left */}\n    <div>\n      <Field\n        type=\"email\" \n        name=\"email\" \n        placeholder=\"Your Email\"/>\n        {touched.email && errors.email && <p> {errors.email}</p>}\n    </div>\n\n    <div>{touched.password && errors.password && <p> {errors.password}</p>}\n    <Field\n      type=\"password\"\n      name=\"password\"\n      placeholder=\"Your Password\"/>\n      <br/>\n    </div>\n\n    <button type=\"submit\">Submit</button>\n  </Form>\n)\n\n\nconst Registration = withFormik ({\n  // Same as handleChange\n    mapPropsToValues({name, email, password}) {\n        return {\n            email: email || '',\n            password: password ||'',\n            name: name || ''\n        }\n    },\n\n    validationSchema: Yup.object().shape({\n    // TODO: asynchronously check if email exists\n    name: Yup.string() \n              .min(3, 'Name must be 3 characters or longer')\n              .max(60, 'Name must be shorter than 60 characters'),\n    email: Yup.string()\n              .email('Email not valid')\n              .max(100)\n              .required('Email is required'),\n    password: Yup.string()\n                 .min(8, 'Password must be 8 characters or longer')\n                 .max(100, 'Password must be shorter than 200 characters')\n                 .matches(passwordRegex, 'Password must have a number, capital letter and a special character.')\n                 .required('Password is required')\n    }),\n    \n    handleSubmit(values) {\n        // TODO //\n        // send request to server using fetch()\n        // -> need to figure out CORS (Cross Origin Resource Sharing)\n        \n        // let headers = new Headers();\n        // // headers.append('Content-Type', 'application/json');\n        // // headers.append('Accept', 'application/json');\n        // // headers.append('Access-Control-Allow-Origin', 'http://localhost:3000');\n        // // headers.append('Access-Control-Allow-Credentials', 'true');\n        // // headers.append('POST', 'OPTIONS');\n\n        // (async () => {\n        //     const rawResponse = await fetch('http://localhost:5000/api/user/register', {\n        //       method: 'POST',\n        //     //   mode: 'cors',\n        //     //   headers: headers,\n        //       contentType: \"application/json\",\n        //       body: JSON.stringify({\"name\": values.name, \"email\": values.email, \"password\": values.password})\n        //     });\n        //     const content = await rawResponse.json();\n        \n        //     console.log(content);\n        //   })();\n    }\n}) (App)\n\nexport default Registration"]},"metadata":{},"sourceType":"module"}